@use "sass:map";
@use "katex/dist/katex.min.css";
@use "colors.variables" as *;
@use "spacing.variables" as *;
@use "typography.variables" as *;

@font-face {
	font-family: "Nutty Nure";
	font-display: swap;
	src: url("/fonts/nure.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty PragmataPro Liga";
	font-weight: normal;
	font-style: normal;
	font-display: swap;
	src: url("/fonts/pragmatapro-liga-regular.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty PragmataPro Liga";
	font-weight: bold;
	font-style: normal;
	font-display: swap;
	src: url("/fonts/pragmatapro-liga-bold.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty PragmataPro Liga";
	font-weight: normal;
	font-style: italic;
	font-display: swap;
	src: url("/fonts/pragmatapro-liga-italic.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty PragmataPro Liga";
	font-weight: bold;
	font-style: italic;
	font-display: swap;
	src: url("/fonts/pragmatapro-liga-bold-italic.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty PragmataPro Fraktur";
	font-weight: normal;
	font-display: swap;
	src: url("/fonts/pragmatapro-fraktur-regular.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty PragmataPro Fraktur";
	font-weight: bold;
	font-display: swap;
	src: url("/fonts/pragmatapro-fraktur-bold.woff2") format("woff2");
}

@font-face {
	font-family: "Nutty FSD Emoji";
	font-display: swap;
	src: url("/fonts/fsd-emoji.woff2") format("woff2");
}

.katex {
	font-size: 1.1em;
}

* {
	// Apply fluid typography styles to tween the base font size between
	// 14.4px (0.9rem) and 16px (1rem) when the viewport is in between
	// 320px (20rem) and 960px (60rem).
	//
	// And then we scale the base font size by ≈110%. For some reason,
	// multiplying by 1.05 results in a multiplication of 1.05² ≈ 1.10.
	// However, I am satisfied with the result, so whatever. ¯\_(ツ)_/¯
	//
	// This calculator was used to figure out the clamp parameters:
	// https://royalfig.github.io/fluid-typography-calculator/
	font-size: calc(clamp(0.9rem, 0.85rem + 0.25vw, 1rem) * 1.05);
	font-family: 'Nutty FSD Emoji', 'Nutty Nure', sans-serif;
	font-variation-settings: 'opsz' 18, 'wdth' 85;
	font-feature-settings: 'kern' 1;
	text-align: justify;
	hyphens: auto;
}

.katex * {
	// Unset all font properties to prevent conflicts with KaTeX.
	// Otherwise, the math will be UGLY! :(
	font-size: unset;
	font-family: unset;
	font-variation-settings: unset;
	font-feature-settings: unset;
	text-align: unset;
	hyphens: unset;
}

@each $heading, $size in $heading-sizes {
	#{$heading} {
		font-size: map.get($type-scale, $size);
		font-variation-settings: 'opsz' 18, 'wdth' 75;
		font-weight: 500;
		line-height: 1.1;
		text-transform: uppercase;
		text-align: left;
		border-bottom: 2px solid;
	}
}

strong, b {
	// The words can be strong, but not too strong.
	font-weight: 550;
}

s {
	color: var(--gray-11);

	// Extend the strikethrough line length.
	&::before, &::after {
		// &nbsp;
		content: "\00a0";
	}
}

a {
	color: var(--gray-12);
	font-weight: 500;
	font-feature-settings: 'smcp' 1, 'c2sc' 1;
	font-variant: all-small-caps;
	font-variant-caps: all-small-caps;
	text-underline-offset: 4px;

	&.with-hover-styles {
		display: inline-block;
		margin-left: -#{map.get($spacing, "0.5")};
		margin-right: -#{map.get($spacing, "0.5")};
		padding-left: map.get($spacing, "0.5");
		padding-right: map.get($spacing, "0.5");
		border-radius: map.get($spacing, "1");

		&:hover, &:focus {
			background: var(--inverted-gray-01);
			color: var(--inverted-gray-12);
			text-decoration: none;
			outline: none;
		}
	}
}

ul {
	display: flex;
	flex-direction: column;
	list-style-type: none;
	padding-left: 0;

	& li {
		padding-left: map.get($spacing, "8");
	}

	& li::before {
		content: "✦";
		position: absolute;
		display: flex;
		justify-content: center;
		align-items: center;
		width: map.get($spacing, "4");
		margin-left: -#{map.get($spacing, "6")};
		float: left;
	}
}

code {
	font-family: "Nutty PragmataPro Liga", monospace;
	font-size: calc(#{map.get($type-scale, "xs")} * 1.05);

	margin-left: map.get($spacing, "0.5");
	margin-right: map.get($spacing, "0.5");
	padding-top: map.get($spacing, "0.5");
	padding-bottom: map.get($spacing, "0.5");
	padding-left: map.get($spacing, "1");
	padding-right: map.get($spacing, "1");
	border-radius: map.get($spacing, "1");
	border: 1px solid var(--gray-12);

	// Prevent slicing over line breaks.
	box-decoration-break: clone;
}

pre > code {
	display: block;
	width: 100%;
	color: unset;
	font-weight: unset;
	padding-top: map.get($spacing, "4");
	padding-bottom: map.get($spacing, "4");
	border: none;
	overflow-x: auto;
}

pre > code, pre > code * {
	font-family: "Nutty PragmataPro Liga", monospace;
	font-size: calc(#{map.get($type-scale, "xs")} * 1.05);
	tab-size: 3;
}

.with-drop-cap {
	@include with-drop-cap;
}
