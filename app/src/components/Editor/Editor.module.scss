@use "sass:map";

[data-theme='light'] {
	--syncing-color: yellow;
}

[data-theme='dark'] {
	--syncing-color: black;
}

.container {
	position: relative;
	display: flex;
	width: 100%;
	height: 100%;
}

.editor {
	width: 50%;
	min-width: 50%;
	max-width: 50%;
	height: 100%;

	:global(.cm-editor *) {
		font-family: "Nutty PragmataPro Liga", monospace !important;
		font-size: calc(#{map.get(styles.$type-scale, "xs")} * 1.1);
		color: var(--gray-12);
	}

	:global(.cm-editor) {
		height: 100%;
	}

	:global(::selection) {
		color: var(--gray-01) !important;
		background-color: var(--gray-12) !important;
	}

	:global(.cm-gutter) {
		background-color: var(--gray-01);

		& > * {
			color: var(--gray-09);
		}
	}

	:global(.cm-activeLineGutter) {
		background-color: var(--gray-03);
	}

	:global(.cm-gutters) {
		border-right-color: var(--gray-03);
		border-right-width: 2px;
	}

	:global(.cm-line) {
		padding-left: map.get(styles.$spacing, "2");
		line-height: 1.7;
	}

	:global(.cm-focused) {
		outline: none;
	}

	:global(.ͼc) {
		color: var(--gray-12);
	}

	:global(.ͼ5) {
		color: var(--gray-11);
	}

	:global(.ͼ7) {
		font-weight: 600;
		font-style: italic;
		font-feature-settings: 'ss06' 1;
	}
}

.output {
	width: 50%;
	padding-left: map.get(styles.$spacing, "4");
	padding-right: map.get(styles.$spacing, "2");
	border-left: 2px solid var(--gray-03);
}

.content {
	@include styles.with-full-bleed;

	width: 100%;
	max-width: 640px;
	margin: auto;
	padding: map.get(styles.$spacing, "4") 0;

	& > p:first-of-type {
		@include styles.with-drop-cap;
	}
}

.sync-button {
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: map.get(styles.$type-scale, "xs");

	height: map.get(styles.$spacing, "6");
	width: map.get(styles.$spacing, "16");

	position: absolute;
	top: 0%;
	left: calc(50% - #{map.get(styles.$spacing, "8")});

	transition: all 0.2s ease-in-out;
	font-weight: 900;
	font-variant: all-small-caps;
	background: var(--gray-12);
	color: var(--gray-01);
	border: map.get(styles.$spacing, "1") solid var(--gray-12);
	border-bottom-left-radius: map.get(styles.$spacing, "1");
	border-bottom-right-radius: map.get(styles.$spacing, "1");
	cursor: pointer;

	z-index: 4000;
}

.syncing {
	animation: 60ms infinite alternate syncing;
	animation-timing-function: ease-in-out;
	color: var(--syncing-color);

	width: map.get(styles.$spacing, "16");
	left: calc(50% - #{map.get(styles.$spacing, "8")});
}

@keyframes syncing {
  0%, 100% {
    text-shadow: 0 0 2em var(--gray-01);
  }
  20%, 80% {
    text-shadow: 0 0 0.4em var(--gray-01);
  }
  50% {
    text-shadow: none;
  }
}
