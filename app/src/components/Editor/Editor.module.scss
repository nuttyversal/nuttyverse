@use "sass:map";
@use "../../styles";

[data-theme='light'] {
	--background-color: #{map.get(styles.$gray, "light", "01")};
	--foreground-color: #{map.get(styles.$gray, "light", "12")};
	--foreground-light-color: #{map.get(styles.$gray, "light", "11")};
	--active-line-color: #{map.get(styles.$gray, "light", "03")};
}

[data-theme='dark'] {
	--background-color: #{map.get(styles.$gray, "dark", "01")};
	--foreground-color: #{map.get(styles.$gray, "dark", "12")};
	--foreground-light-color: #{map.get(styles.$gray, "light", "11")};
	--active-line-color: #{map.get(styles.$gray, "dark", "03")};
}

.container {
	display: flex;
	width: 100%;
	height: 100%;
}

.editor {
	width: 50%;
	min-width: 50%;
	max-width: 50%;
	height: 100%;

	:global(.cm-editor *) {
		font-family: "PragmataPro Liga", monospace !important;
		font-size: map.get(styles.$type-scale, "xs");
	}

	:global(.cm-editor) {
		height: 100%;
	}

	:global(::selection) {
		background-color: var(--foreground-color);
		color: var(--background-color);
	}

	:global(&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground) {
		background-color: var(--foreground-color);
	}

	:global(.cm-selectionBackground) {
		background-color: var(--foreground-color);
	}

	:global(.cm-gutter) {
		background-color: var(--background-color);
		color: var(--foreground-light-color);
	}

	:global(.cm-activeLineGutter) {
		background-color: var(--active-line-color);
	}

	:global(.cm-gutters) {
		border-right-color: var(--active-line-color);
		border-right-width: 2px;
	}

	:global(.cm-line) {
		padding-left: map.get(styles.$spacing, "2");
		line-height: 1.6;
	}

	:global(.cm-focused) {
		outline: none;
	}

	:global(.Í¼c) {
		color: var(--foreground-color);
	}
}

.output {
	width: 50%;
	height: 100%;
	max-height: 100%;
	padding-left: map.get(styles.$spacing, "4");
	padding-right: map.get(styles.$spacing, "2");
	border-left: 2px solid var(--active-line-color);
	overflow-y: auto;
}

.content {
	@extend .with-full-bleed;

	max-width: 600px;
	margin: auto;
	padding: map.get(styles.$spacing, "4") 0;

	& > p:first-of-type {
		@extend .with-drop-cap;
	}
}
